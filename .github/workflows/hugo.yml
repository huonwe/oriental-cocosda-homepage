# Sample workflow for building and deploying a Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["main"]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.147.5
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
      #- name: Setup Pages
      #  id: pages
      #  uses: actions/configure-pages@v5
      - name: Install Node.js dependencies
        run: "[[ -f package-lock.json || -f npm-shrinkwrap.json ]] && npm ci || true"
      - name: Install scss dependencies
        run: npm install --save-dev autoprefixer && npm install --save-dev postcss-cli && npm install -D postcss
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          hugo \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Deploy to public branch # 步骤4: 将生成的 public 目录部署到 public 分支
        uses: peaceiris/actions-gh-pages@v3 # 使用 peaceiris/actions-gh-pages 动作进行部署
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }} # 使用 GitHub 提供的 token 进行认证
          publish_dir: ./                     # 指定要发布的目录，Hugo 的输出默认就在 public 目录下
          publish_branch: public                    # 指定要发布到的目标分支，这里是 public 分支
          force_orphan: true                        # 强制清除 public 分支的旧内容，只保留当前构建的内容
          commit_message: "Deploy Hugo site to public branch [skip ci]" # 提交信息，并添加 [skip ci] 防止无限循环触发
      #- name: Upload artifact
      #  uses: actions/upload-pages-artifact@v3
      #  with:
      #    path: ./public
